[4:57 pm, 13/05/2022] Ganesh Cpg: package com.creditcard.controller;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.creditcard.entities.Admin;
import com.creditcard.exceptions.AdminNotFoundException;
import com.creditcard.payload.LoginReq;
import com.creditcard.service.AdminService;

@RestController
@RequestMapping("/api/admin")
public class AdminController {
	@Autowired
	AdminService adminService;

	@PostMapping("/addadmin")
	public Admin addAdmin(@RequestBody Admin admin) {
		return adminService.addAdmin(admin);
	}

	@GetMapping("/getadmin/{id}")

	public Admin getAdmin(@PathVariable("id") int adminId) throws AdminNotFoundException{
		Admin admin  = adminService.getAdminById(adminId);
		if (admin == null) {
			throw new AdminNotFoundException();
		}
		return adminService.getAdmin(adminId);
	}
	
	 @GetMapping("/alladmin")

	 public List<Admin> getAllAdmins()
	 {
	 return adminService.getAllAdmins();
	 }

	 @PostMapping("/login")
		public ResponseEntity<Admin> validateAdmin(@RequestBody LoginReq loginreq)  {

			Admin admin1 = adminService.validateAdmin(loginreq.getUserName(), loginreq.getPassword());

			return new ResponseEntity<Admin>(admin1, HttpStatus.OK);
		}

}
[5:00 pm, 13/05/2022] Ganesh Cpg: package com.creditcard.service;

import java.util.List;

import org.springframework.http.ResponseEntity;

import com.creditcard.entities.Admin;
import com.creditcard.entities.User;
import com.creditcard.exceptions.AdminNotFoundException;

public interface AdminService {

	Admin addAdmin(Admin admin);

	Admin getAdminById(int adminId) throws AdminNotFoundException;

	Admin getAdmin(int adminId);

	List<Admin> getAllAdmins();

	Admin validateAdmin(String userName, String password) throws AdminNotFoundException;

	Admin getAdminById(Integer adminId) throws AdminNotFoundException;



}