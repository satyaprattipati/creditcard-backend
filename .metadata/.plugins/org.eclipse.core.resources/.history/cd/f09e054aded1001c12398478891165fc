package com.creditcard.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.mockito.Mockito.doNothing;
import static org.mockito.Mockito.times;
import static org.mockito.Mockito.verify;
import static org.mockito.Mockito.when;
 
import java.time.LocalDate;
import java.util.Optional;
 
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
 

@SpringBootTest
public class TransactionTest {

    @Mock
    private TransactionRepository transactionReposity;
    
 
    @InjectMocks
    private ProductServiceImpl productServiceImpl;    

    @Test 
    public void testGetProductById() {

        Product product = new Product();
        product.setProductId(101);
        product.setProductName("Pname");
        product.setProductPrice(50000);
        product.setCreatedOn(LocalDate.of(2022,10, 10));
        product.setCategory("Mobile");

        Optional<Product> optionalProduct = Optional.of(product);

        when(productRepository.findById(101)).thenReturn(optionalProduct);            

        Product actualProduct = productServiceImpl.getProductById(101);

        Product expectedProduct = optionalProduct.get();

        assertEquals(expectedProduct.getProductName(),actualProduct.getProductName());        

    }

























//import static org.assertj.core.api.Assertions.assertThat;
//import org.junit.jupiter.api.AfterAll;
//import org.junit.jupiter.api.AfterEach;
//import org.junit.jupiter.api.BeforeAll;
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.mockito.Mockito;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.boot.test.mock.mockito.MockBean;
//
//import com.creditcard.entities.Transaction;
//import com.creditcard.repositories.TransactionRepository;
//import com.creditcard.service.TransactionService;
//
//class TransactionTest {
//
//	@Autowired
//	TransactionService transactionService;
//	@MockBean
//	TransactionRepository transactionReposity;
//	Transaction transaction;
//
//	@BeforeAll
//	static void setUpBeforeClass() throws Exception {
//	}
//
//	@AfterAll
//	static void tearDownAfterClass() throws Exception {
//	}
//
//	@BeforeEach
//	void setUp() throws Exception {
//		transaction = new Transaction();
//		transaction.getTransactionId();
//		transaction.getTransactiondate();
//		transaction.getAmount();
//		transaction.getStatus();
////transaction.getUser();
//		transaction.getCustomerCreditCard();
//
//	}
//
//	@AfterEach
//	void tearDown() throws Exception {
//	}
//
//	@Test
//	void test() {
//		Mockito.when(transactionReposity.save(transaction)).thenReturn(transaction);
//		assertThat(transactionService.addTransaction(transaction));
//
//	}
//
//	@Test
//	void testGetMovieShow() throws ShowNotFoundException {
//		ArrayList showList = new ArrayList();
//
//		Mockito.when(transactionReposity.findAll()).thenReturn(showList);
//		assertThat(transactionService.getAlltransaction()).isEqualTo(showList);
//
//	}
//
//}
